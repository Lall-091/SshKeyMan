{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "92bcfd7e357a256fee73afca20e1f3ee",
    "entities": [
      {
        "tableName": "sshkey",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `name` TEXT NOT NULL, `email` TEXT NOT NULL, `publicKey` TEXT NOT NULL, `privateKey` TEXT NOT NULL, `passphrase` TEXT NOT NULL, `algo` TEXT NOT NULL, `note` TEXT NOT NULL, `baseStatus` INTEGER NOT NULL, `baseCreateTime` INTEGER NOT NULL, `baseUpdateTime` INTEGER NOT NULL, `baseIsDel` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "publicKey",
            "columnName": "publicKey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "privateKey",
            "columnName": "privateKey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "passphrase",
            "columnName": "passphrase",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "algo",
            "columnName": "algo",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "note",
            "columnName": "note",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "baseFields.baseStatus",
            "columnName": "baseStatus",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "baseFields.baseCreateTime",
            "columnName": "baseCreateTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "baseFields.baseUpdateTime",
            "columnName": "baseUpdateTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "baseFields.baseIsDel",
            "columnName": "baseIsDel",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "passEncrypt",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `ver` INTEGER NOT NULL, `reserve1` TEXT NOT NULL, `reserve2` TEXT NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ver",
            "columnName": "ver",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reserve1",
            "columnName": "reserve1",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "reserve2",
            "columnName": "reserve2",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '92bcfd7e357a256fee73afca20e1f3ee')"
    ]
  }
}